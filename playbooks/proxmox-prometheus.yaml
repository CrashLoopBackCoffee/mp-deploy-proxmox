- name: Configure node metrics with Prometheus
  hosts: pve_nodes
  gather_facts: true

  vars:
    prometheus_yml_ct: /etc/prometheus/prometheus.yml
    prometheus_yml_tmp: /root/prometheus.yml
    pve_exporter_yml: /etc/prometheus/pve-exporter.yaml
    pve_exporter_venv: /opt/prometheus-pve-exporter

  tasks:
    - name: Query LXC containers
      ansible.builtin.command:
        pvesh get /nodes/{{ ansible_hostname }}/lxc --output-format=json
      register: get_lxc_result
      changed_when: false
      check_mode: false

    - name: Look for Prometheus containers
      ansible.builtin.set_fact:
        prometheus_containers: >-
          {{ get_lxc_result.stdout
          | from_json
          | selectattr('name', 'equalto', 'prometheus')
          | list }}

    - name: Ensure Prometheus container exists
      ansible.builtin.assert:
        that: prometheus_containers | length == 1
        fail_msg:
          There must be exactly one LXC container named 'prometheus'. Create it by running the
          utility script at https://community-scripts.github.io/ProxmoxVE/scripts?id=prometheus.

    - name: Extract Prometheus container ID
      ansible.builtin.set_fact:
        prometheus_container_id: "{{ prometheus_containers[0].vmid }}"

    - name: Download Prometheus config from container to pve node
      ansible.builtin.shell:
        pct pull {{ prometheus_container_id }} {{ prometheus_yml_ct }} {{ prometheus_yml_tmp }} &&
        chmod 0600 {{ prometheus_yml_tmp }}
      changed_when: false
      check_mode: false

    - name: Generate Prometheus config for container
      ansible.builtin.template:
        src: prometheus-ct.yml.j2
        dest: "{{ prometheus_yml_tmp }}"
        mode: '0600'
      vars:
        prometheus_remote:
          push_url: "{{ lookup('ansible.builtin.env', 'PROMETHEUS_REMOTE_PUSH_URL') }}"
          username: "{{ lookup('ansible.builtin.env', 'PROMETHEUS_REMOTE_USERNAME') }}"
          password: "{{ lookup('ansible.builtin.env', 'PROMETHEUS_REMOTE_PASSWORD') }}"
      notify: Reconfigure Prometheus in container

    - name: Query user accounts
      ansible.builtin.command:
        pveum user list --output-format=json
      register: query_users_result
      changed_when: false
      check_mode: false

    - name: Look for pve-exporter account
      ansible.builtin.set_fact:
        pve_exporter_users: >-
          {{ query_users_result.stdout
          | from_json
          | selectattr('userid', 'equalto', prometheus.pve_exporter.username ~ '@pve')
          | list }}

    - name: Create pve-exporter account
      ansible.builtin.shell:
        pveum user add {{ prometheus.pve_exporter.username }}@pve
          --password={{ prometheus.pve_exporter.password }}
          --comment "Prometheus exporter service account." &&
        pveum acl modify / --users {{ prometheus.pve_exporter.username }}@pve --roles PVEAuditor &&
        useradd -s /bin/false {{ prometheus.pve_exporter.username }}
      changed_when: true
      when: pve_exporter_users | length == 0

    - name: Install virtualenv package
      ansible.builtin.apt:
        name: python3-virtualenv
        state: present

    - name: Install pve-exporter in {{ pve_exporter_venv }}
      ansible.builtin.pip:
        name: prometheus-pve-exporter
        virtualenv: "{{ pve_exporter_venv }}"

    - name: Ensure pve-exporter config dir
      ansible.builtin.file:
        path: "{{ pve_exporter_yml | dirname }}"
        state: directory
        mode: '0640'

    - name: Generate pve-exporter config file
      ansible.builtin.template:
        src: prometheus-pve-exporter.yml.j2
        dest: "{{ pve_exporter_yml }}"
        owner: root
        group: "{{ prometheus.pve_exporter.username }}"
        mode: '0640'

    - name: Generate pve-exporter service file
      ansible.builtin.template:
        src: prometheus-pve-exporter.service.j2
        dest: /etc/systemd/system/prometheus-pve-exporter.service
        mode: '0644'
      notify: Start pve-exporter service

  post_tasks:
    - name: Delete local copy of Prometheus config
      ansible.builtin.file:
        dest: "{{ prometheus_yml_tmp }}"
        state: absent
      changed_when: false

  handlers:
    - name: Reconfigure Prometheus in container
      ansible.builtin.shell:
        pct push {{ prometheus_container_id }} {{ prometheus_yml_tmp }} {{ prometheus_yml_ct }} &&
        pct exec {{ prometheus_container_id }} systemctl restart prometheus
      changed_when: true

    - name: Start pve-exporter service
      ansible.builtin.systemd_service:
        name: prometheus-pve-exporter
        state: started
        enabled: true
        daemon_reload: true
